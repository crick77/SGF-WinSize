<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAE6VJREFUeF7tnW/EbeeZhyviiCOiIuKoiIiKqIiIGBU1IiKiKmLMhxFVVfMhYlRV
        VUSFqoroh4gRERE1RkVEVMWIqIiKiFExoqIiIlNRVRVRFVVHzFy/nGed7uysc87aez9r7WetdV1c2p6+
        ez3rvfd9//a7915/PiciUoX/ve3ERXgDfhN/iI/jz/AX+DL+Ct/A/8E38b0e/4gfDvDP+H8T+jFmzb59
        mdIPsK9ux/A3mOfyEF/A20sLyRzhCbwGf4DvYt/wqJ7PhOtreBdeXNpKWocnK6/2P8fT2PfEqu5iguDX
        eDdedKbLpDl4cr6AT+HfsO+JVD3EBEHeLt5cWk5agCck7/HvwN9j3xOnWtOP8CG8pLSgHAuehIsx7/N9
        1dcpzV8D+RD5VGlFmRqKfwKfxL4nSHUK38JbSkvKVFD0k/gf5UlQPaZ/wjtLa8rYUOy88j9Xiq/agn/A
        W0uLylhQ5Hzg93ApumpL5iCkG0uryhhQ4G9gPoDpewJUj20+E7i2tKvUhMLeivkKpq/wqq34PPoVYU1S
        UMwx3n0FV23J03j/mc6VKlDQ72wUWLV183mAbwVqQCFziG++aukrtGqr5qxTzx04FIr42EZRVediXrRu
        Km0s+0ABL8Wca95XYNXWfaq0suwDBfz6VkFV5+Tv8OrSzrIrFO+VjWKqzs3TeM+ZbpadoHBXogf96Nx9
        pLS07AKF+9pWIVXn6AulpWUXKNyPtgqpOkdzkdETpa1lKBTtxY0izs28dTmtVZ3r28G38YrPyW5QtJxi
        2VfQWuYqQlkjlwT/JT6LT+MTmGMPHinm8k8PFL+P9w0wlyC/V6uaE8H6ar3t97B7vnK1qO55zHOa5/an
        mOP1X8UcsfcX7OuPWr6PHhW4KxRtzMt8nca8xTh5ZjVZIzz/Ob08J5m9g319UsMcEORpwrtAwXKtv75i
        1jI3s7i+LCcrh1747kZv1DY3bvlyWUqGQME+v1HAMUwqX16Wk5VDL9y50Ru1/SveVpaSIVCwyzcKOIZ5
        7++JGvIJ9MKNG71R23x4eVdZSoZAwXJbr75i1vLtspRI+u0qHPNbhq+VpWQIFGzsAHijLCWSfjuFY34b
        cG9ZSoZAwa7fKmBtXytLiXQBMOadnb9elpIhULCbtgpY25fKUiLpt5x3MuZxJ14ibBco2NgB8GJZSqQL
        gDHvLflvZSkZAgUzAGQy6IcrMEfs9fVKDR8oS8kQKJgBIJNBP+Rr5xyz39crNXywLCVDoGA5PLOvkLV8
        viwlYgC0BgW7bauAtX2mLCViALQGBTMAZDLohxx6/uZGf9TWANgFCmYAyGTQD5dhLtzR1ys1/HFZSoZA
        wcYOgCfLUiJTBMBPylIyBAo2dgA8UZYSMQBag4J9dauAtTUA5Cz0gwHQEhTs7q0C1tYAkLPQDwZAS1Aw
        A0Amg34wAFqCghkAMhn0w9gB8GhZSoZAwQwAmQz6YewA8FunXaBgBoBMBv1gALQEBbtnq4C1NQDkLPSD
        AdASFGzs24I/VpYSMQBag4LlLjB9hazlw2UpEQOgNSiYASCTQT8YAC1BwQwAmQz6wQBoCQpmAMhk0A8J
        gNwktq9XamgA7AIFMwBkMuiHk5i7Bff1Sg0NgF2gYAaATAb9kAD41UZ/1NYA2AUKZgDIZNAPBkBLUDAD
        QCaDfjAAWoKCGQAyGfSDAdASFMwAkMmgHwyAlqBgBoBMBv1gALQEBfvWVgFr23wAsI+5VPXVeB3mbsk3
        jGS2v49fxOzfmOa+/blv3y5eVEo4GB5jALQEBfv2VgFr23QAsH+X4vP4Huamlblz7QcjmW1njV3NvfSy
        f++O6Dv41g7+CA2AuUPB1h4AefUf89DUpfkxPoefLyXcCR5nALQEBTMADIChHjT8gccaAC1BwQwAA2CI
        Bw9/4PEGQEtQMAPAALiQVYY/sA0DoCUomAFgAJzPasMf2I4B0BIUzAAwAM5l1eEPbMsAaAkKZgAYAH1W
        H/7A9gyAlqBgBoAB0GeG/7JSpmqwTQOgJSiYAWAAbDvK8Ae2awC0BAUzAAyATUcb/sC2DYCWoGAGgAHQ
        OerwB7ZvALQEBTMADIA4+vAH1jAAWoKCGQAGwCTDH1jHAGgJCmYArDsAJhv+wFoGQEtQMANgvQGQ06An
        G/7AegZAS1Cw724VsLYGQJtO+srfwZoGQEtQsIe2ClhbA6A9jzL8gXUNgJagYAbAugLgaMMfWNsAaAkK
        ZgCsJwCOOvyB9Q2AlqBgBsA6AuDowx/YBwOgJSiYAbD8AGhi+AP7YQC0BAUzAJYdAM0Mf2BfDICWoGAG
        wHIDoKnhD+yPAdASFMwAWGYAvIBVL+ZRA/bJAGgJCmYALDMAXsNT5ddsBvbJAGgJCmYALPctwCvYVAiw
        PwZAS1AwA2DZHwJm2JoJAfbFAGgJCmYALDsAYjMhwH4YAC1BwQyA5QdAzNBdWX7to8E+GAAtQcEMgHUE
        QDx6CLC+AdASFMwAWE8AxKOGAGsbAC1BwQyAdQVAPFoIsK4B0BIUzABYXwDEV/GKUobJYE0DoCUomAGw
        zgCIk4cA6xkALUHBDID1BkCcNARYywBoCQpmAKw7AOJkIcA6BkBLUDADwACIk4QAaxgALUHBDAADoHP0
        EGD7BkBLUDADwADYNMM5WgiwbQOgJSjYA1sFrK0BMD9H+0uA7RoALUHBvDOQAdBnQqD6wUJs0wBoCQpm
        ABgA57J6CLA9A6AlKJgBYACcz6ohwLYMgJagYAaAAXAhq4UA2zEAWoKCGQAGwBCrhADbMABagoIZAAbA
        UA8OAR5vALQEBTMADIBdPCgEeKwB0BIUzAAwAHZ17xDgcQZAS1AwA8AA2Me9QoDHGAAtQcEMAANgX3cO
        AX7eAGgJCmYAGACHuFMI8LMGQEtQMANgmgD4HX689W9LcXAI8HMGQEtQMANg/ADIXXpP4ZO46hDgZwyA
        lqBgBsC4AZDh/+QuvfznJbjUEHgPr/ukqOeBnzEAWoKCGQDjBcDZ4e/gfycEnsIlhUDe3txYfsXzws9d
        iq+Xx42hAbALFMwAGCcAPjP8Hfz7kv4SGDz8gZ+9DMf8i8sA2AUKdt9WAWu7xgA45/B38P8v4S+BnYY/
        8PMGQEtQsG9sFbC2awuACw5/Bz835xDI8N9QfpXB8BgDoCUomAFQryEz/JeVTQ+Cnz+BcwuB93Hn4Q88
        zgBoCQpmANRpyJ2Hv4PHzSkE9h7+wGMNgJagYAbA4Q259/B38Pg5hMBBwx94vAHQEhTMADisIQ8e/g62
        03IIHDz8gW0YAC1BwQyA/Ruy2vB3sL0WQyDD/6WyiwfBdgyAlqBgBsB+DVl9+DvYbkLgaWwhBH6PVYY/
        sC0DoCUomAGwe0OONvwdbP9iPHYIVB3+wPYMgJagYGMHwKNlqSZh/3YNgNGHv4N1jhkC1Yc/sE0DoCUo
        2NgB8ERZqknYv10CYLLh72C9Y4TAKMMf2K4B0BIUzAAY1pCTD38H604ZAqMNf2DbBkBLUDAD4MINebTh
        72D9KUJg1OEPbN8AaAkK9s9bBazt3APg6MPfwX6MGQKjD39gDQOgJSjY3VsFrO2cA6CZ4e9gf8YIgUmG
        P7COAdASFMwA+GxDZriaG/4O9qtmCEw2/IG1DICWoGAGwKcbsunh72D/aoTApMMfWG/sAHi8LCVDoGAG
        wN8bshv+QefzHxv285AQmHz4A2tejm+XfRjDn5SlZAgUzAA4EwCzGv4O9nefEDjK8AfWNQBagoKNHQBN
        vydj/7oAmN3wd7Dfu4RAtRN79oG1DYCWoGC3bxWwts+UpZqE/UsA/CD/Wf5plrD/Q0Kgyim9h8D6BkBL
        ULDbtgpY29YD4KJY/ues4fc4XwgcffgD+2AAtAQFW3UALA3q3RcCTQx/YD/GDoBHylIyBApmACwMar4Z
        AntdvXcs2JexA+DBspQMgYIZAAuEuicEfoLNDH9gfxIA72Bfr9TQANgFCvaPWwWs7bNlKZH025WYryH7
        eqWGBsAuULCbtgpY2xfLUiIGQGtQMANAJoN+SAD8YaM/amsA7AIFGzsAXipLiaTfTuGfN/qjtt8uS8kQ
        KNjYAfB6WUqkC4C/bPRHbe8vS8kQKNiNWwWsrQEgZ6EfvoB/3eiP2n6zLCVDoGDXbBWwtm+WpUTSb1dv
        9Udt7y1LyRAo2NgB8NuylMgUf3H+U1lKhkDB8p6sr5C1fL8sJZJ++/JWf9T2q2UpGQIFy9lwfYWs5R/x
        ZFlOVg69cNdGb9T2b3hHWUqGQMFObhRwDD/Aq8pysnLohfs2eqO2+Xbh1rKUDIWiDbmQxL5+hKaypM9y
        fsLPSl+MYV5sbi7LyVAo2ocbRRzDt/Bx/D7+K96LX8OciPQVzPvCG4rX41UXMJ9b1DBHpV2hk5nnfMyv
        AHOE4fWlrWUoFO2/N4rYuvlrJX/q1fBPmOPSdRpT877ntJbv4qnS1jIUivbvG0VUnau/wUtLW8tQKFr+
        JO8rqOqcfLm0tOwChfsijvlBoOoUelegfaBwuTDmmHdrUR3bvIB5HsC+ULzvbBRTdW7mA90bSzvLrlC8
        fC025lc0qmP6SzxR2ln2gQI+u1FQ1bmYFy5PAjoUipgDcfwrQOdmXv0936QGFPKJjcKqtm4uL3ZnaV85
        FIqZQ21zTHVfsVVbMp/8P4kXl/aVGlDQnLF1GvuKrtqKv8VrznStVIOi5qyt/yxFVm3R/JXqxT/GguLm
        7K03S7FVWzIfVOe4lUXc1blZKHAuGf4e9j0Jqscww/9D9Dv/KaDQN6MhoC2YS37lhqeXlPaUKaDgt6Ah
        oMc0X/c9gJMOP+v5NiNQiBwk9Cp61qBO7fv4LzjpMLJebmX+CN4x9dpNUgqSi4d4tKBO4WnMUX6TX+eP
        NXNuzHOYF7xczehONAQoQr4iTBrn6iv+NaBjmaF7CD9fWm8yWDO3L/sv3Ozv7M9X0RAIFCIX1MxFPn+H
        m0+c6iHm+/2n8YbSapPCurlT1kvY9+KWe1zcg7MPAX6H3A7glvI/94eNpGAP4q9x7Is+6jLNsOWFJFeO
        /gc8yqG9rJtefhn79rFz9iHAvl+CCdmHyj8dDhtLouQS3/ma5jXMpcBzldZ8gJM/n3LBhphPc2PCIl/r
        dPp2Yr5uPo+deX675zqv6t3zn0t3px/yrVLeRuaI01yT8trSSkeB9XM5+nzI3ff7bTvbEGCfM/yPYeat
        XgBsw8YvxXyQci1eh7kpZEzC5z4A8fYNc8uovMfaNNeRz+cNaZBd/Bber+e0uzfDENPo28/LtpvPY+et
        2D3POaCse/6/hLkGZU46a+IKvuxHhv917Bv2czm7EGBfM/z5EL97sR0vAETmAEOwz/B3ziYE2McT+Chu
        /qVtAMh6YQAOGf7O5kOAfcvw/xi332YbALJOaP68FTl0+DvzuUaTxwmwTxn+h/E0bu+3ASDrg8bPZxFv
        bAxCDZs7WIh9yTE7OXHqNPbtswEg64Kmz/CPdQ+MZkKAfcjw5+v5fCPTt6/RAJD1QMOPOfydRw8B1h4y
        /NEAkHVAs08x/J1HC4Gsid/DCw1/NABk+dDoUw5/Z0Lg9rILk8B6Gf5v49CT9QwAWTY0+TGGvzNHO36l
        7MqosE43/B9h3770aQDIcqHBjzn8naOHANvP8OdK3rsMfzQAZJnQ3C0Mf+fbePiZdz2w3Qx/Du3OORd9
        a59PA0CWB43d0vB35h4G1UOAbea8l32GPxoAsixo6haHvzNnyFa7zgHbyolyH5Zt76MBIMuBhm55+Duz
        fweHANvI8B96Cz8DQJYBzTyH4e/Mfl5Xdn1neOzdWOP+nQaAzB8aeU7D35kTkb5YfoXB8JgMf85A7Nvm
        rhoAMm9o4jkOf2dCYPCVkPjZXDSn1vBHA0DmCw085+HvfAWvLr/SOeFncm+CHF3Yt419NQBkntC8Sxj+
        zvOGAP9fLrFWe/ijASDzg8Zd0vB3voinyq94Fv4t11Yc69L7BoDMC5r2alza8HfmZiRnQ4D/nuEf856c
        BoDMC5o2t6d7Bpd6Gflf4BWYu3Lnsvp9P1NLA0DmB42bAVlqCOR3ytuBdzb+bSwNAJknNO+SQ2AqDQCZ
        LzSwIXCYBoDMG5rYENhfA0DmD41sCOynASDLgGY2BHbXAJDlQEMbArtpAMiyoKkNgeEaALI8aGxDYJgG
        gCwTmtsQuLAGgCwXGtwQOL8GgCwbmtwQOLcGgCwfGt0Q6NcAkHVAsycEfr7R/GoAyJqg4U9hTrftG4Y1
        agDIuqDpDYG/awDI+qDxDYEzGgCyTmh+Q8AAkDXDAKw9BAwAWTcMwZpDwAAQYRASAi9sDMZaNABEAsOw
        xhAwAEQ6GIi1hYABILIJQ7GmEDAARLZhMNYSAgaASB8MxxpCwAAQORcMyNJDwAAQOR8MyZJDwAAQOR8M
        yaWYawn0DdDcNQBEzgUDkuH/KZ4uA7M0DQCRPhiObviXfBUhA0BkGwZjDcMfDQCRTRiKtQx/NABEOhiI
        NQ1/NABEAsOwtuGPBoAIg7DG4Y8GgKwbhmCtwx8NAFkvDMCahz8aALJOaP61D380AGR90PgO/xkNAFkX
        NL3D/3cNAFkPNLzD/2kNAFkHNLvD/1kNAFk+NLrD368BIMuGJnf4z60BIMuFBnf4z68BIMuE5nb4L6wB
        IMuDxnb4h2kAyLKgqU9ihr+v4fXTGgCyHGhoh383DQBZBjSzw7+7BoDMHxrZ4d9PA0DmD418S5pZd/XE
        bf8PEz0bcUudB/UAAAAASUVORK5CYII=
</value>
  </data>
</root>