<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>